name: Sync services
on: 
  repository_dispatch:

jobs:
  Sync-services:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout Local Env  
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PELICAN_ENV_SYNC_TRIGGER_TOKEN }}

      - name: Set branch name
        run: 
          echo "BRANCH_NAME=feature/sync-image-tag-${{ github.event.client_payload.repository }}-$(date +'%FT%H-%M')-short-sha-${{ github.event.client_payload.short_sha }}" >> $GITHUB_ENV
      
      - name: Set path to values file
        run:
          echo "PATH_TO_VALUES=${{ github.event.client_payload.path_to_values }}" >> $GITHUB_ENV

        # yq is used to modify yaml, but it mistakenly deletes empty lines, so to prevent this, we write the changes to another file
        # and then create a file with differences to modify the main file via patch and save the empty lines.
        # Reference: https://stackoverflow.com/a/57938189
      - name: Write new image tag to values
        run: |
          sed "0,/tag:.*/s//tag: \"${{ github.event.client_payload.image_tag }}\"/" $PATH_TO_VALUES >  $PATH_TO_VALUES.2
          cp $PATH_TO_VALUES.2 $PATH_TO_VALUES

      - name: Commit and Push Changes
        run: |
          git config --global user.name github-actions[bot]
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com

          git checkout -b $BRANCH_NAME master

          git add $PATH_TO_VALUES

          git commit -m "${{ github.event.client_payload.commit_message }}"
          
          git push origin $BRANCH_NAME

      - name: Set PR title
        run: 'echo "PR_TITLE=sync: ${{ github.event.client_payload.repository }} image tag" >> $GITHUB_ENV' 
        
      - name: Create PR
        run: gh pr create -B master -H $BRANCH_NAME --title "${{ env.PR_TITLE }}" --body "${{ github.event.client_payload.commit_message }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge for PR
        run: gh pr merge $BRANCH_NAME --auto --merge --subject "${{ env.PR_TITLE }}" --body "${{ github.event.client_payload.commit_message }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Approve PR
        run: gh pr review $BRANCH_NAME -a
        env:
          GITHUB_TOKEN: ${{ secrets.PELICAN_ENV_SYNC_TRIGGER_TOKEN }}
